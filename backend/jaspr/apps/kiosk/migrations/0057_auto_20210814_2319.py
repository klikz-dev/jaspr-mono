# Generated by Django 2.2.24 on 2021-08-15 04:19

from django.conf import settings
from django.db import migrations, models
from django.core.management import call_command
import django.utils.timezone
import fernet_fields.fields
import model_utils.fields
import simple_history.models


def load_default_notes(apps, schema_editor):
    call_command('loaddata', 'jaspr/apps/kiosk/migrations/default_notes.json', verbosity=2)

class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('kiosk', '0056_merge_20210814_2319'),
    ]

    operations = [
        migrations.CreateModel(
            name='NoteTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', model_utils.fields.StatusField(choices=[('active', 'Active'), ('archived', 'Archived')], default='active', max_length=100, no_check_for_status=True)),
                ('name', models.CharField(max_length=255)),
                ('template', models.TextField()),
            ],
            options={
                'verbose_name': 'Note Template',
                'verbose_name_plural': 'Note Templates',
            },
        ),
        migrations.AlterField(
            model_name='historicalpatientsession',
            name='end_time',
            field=fernet_fields.fields.EncryptedDateTimeField(blank=True, help_text='Session end time', null=True),
        ),
        migrations.AlterField(
            model_name='historicalpatientsession',
            name='start_time',
            field=fernet_fields.fields.EncryptedDateTimeField(blank=True, help_text='Session start time', null=True),
        ),
        migrations.AlterField(
            model_name='patientsession',
            name='end_time',
            field=fernet_fields.fields.EncryptedDateTimeField(blank=True, help_text='Session end time', null=True),
        ),
        migrations.AlterField(
            model_name='patientsession',
            name='start_time',
            field=fernet_fields.fields.EncryptedDateTimeField(blank=True, help_text='Session start time', null=True),
        ),
        migrations.CreateModel(
            name='ProviderComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', model_utils.fields.StatusField(choices=[('active', 'Active'), ('archived', 'Archived')], default='active', max_length=100, no_check_for_status=True)),
                ('answer_key', models.CharField(help_text='Answer key of the question being referenced', max_length=100)),
                ('comment', models.CharField(max_length=10000, verbose_name='Comment')),
                ('patient_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kiosk.PatientSession', verbose_name='Patient Session')),
                ('technician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kiosk.Technician')),
            ],
            options={
                'verbose_name': 'Provider Comment',
                'verbose_name_plural': 'Provider Comments',
            },
        ),
        migrations.CreateModel(
            name='HistoricalNoteTemplate',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', model_utils.fields.StatusField(choices=[('choice1', 'choice1'), ('choice2', 'choice2')], default='choice1', max_length=100, no_check_for_status=True)),
                ('name', models.CharField(max_length=255)),
                ('template', models.TextField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Note Template',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='AssessmentLocks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', model_utils.fields.StatusField(choices=[('active', 'Active'), ('archived', 'Archived')], default='active', max_length=100, no_check_for_status=True)),
                ('locked', models.BooleanField(default=False, help_text='Indicates whether or not the assessment is locked', verbose_name='Locked?')),
                ('patient_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kiosk.PatientSession', verbose_name='Patient Session')),
            ],
            options={
                'verbose_name': 'Assessment Lock',
                'verbose_name_plural': 'Assessment Locks',
            },
        ),
        migrations.RunPython(load_default_notes)
    ]
