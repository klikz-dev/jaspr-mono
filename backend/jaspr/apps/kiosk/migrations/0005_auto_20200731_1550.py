# Generated by Django 2.2.13 on 2020-07-31 22:50

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import fernet_fields.fields
import model_utils.fields
import phonenumber_field.modelfields
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("kiosk", "0004_auto_20200713_1327"),
    ]

    operations = [
        migrations.RemoveField(model_name="historicaltechnician", name="first_name",),
        migrations.RemoveField(model_name="historicaltechnician", name="last_name",),
        migrations.RemoveField(model_name="technician", name="first_name",),
        migrations.RemoveField(model_name="technician", name="last_name",),
        migrations.AddField(
            model_name="historicalpatient",
            name="beta",
            field=models.BooleanField(
                default=False,
                help_text="Designates that this user has permission to view test Interviews marked Beta = True.",
                verbose_name="Can see beta Interviews",
            ),
        ),
        migrations.AddField(
            model_name="historicalpatient",
            name="date_of_birth",
            field=fernet_fields.fields.EncryptedDateField(
                blank=True, null=True, verbose_name="Date of Birth"
            ),
        ),
        migrations.AddField(
            model_name="historicalpatient",
            name="first_name",
            field=fernet_fields.fields.EncryptedCharField(
                blank=True, max_length=150, verbose_name="First Name"
            ),
        ),
        migrations.AddField(
            model_name="historicalpatient",
            name="last_name",
            field=fernet_fields.fields.EncryptedCharField(
                blank=True, max_length=150, verbose_name="Last Name"
            ),
        ),
        migrations.AddField(
            model_name="historicalpatient",
            name="mrn",
            field=fernet_fields.fields.EncryptedCharField(
                blank=True,
                help_text="An MRN is constant for one patient to represent them from a clinical data perspective for their entire life for an individual hospital. However there may be more than one if hospital transfers are made. It is PID.3 in HL7 parlance, 'id' on Patient in FHIR. Unique together per clinic. Note this example: https://www.hl7.org/fhir/patient-example-a.json.html. We're going touse the value from 'identifier'.",
                max_length=255,
                verbose_name="Medical Record Number",
            ),
        ),
        migrations.AddField(
            model_name="historicaltechnician",
            name="activated",
            field=models.BooleanField(default=False, verbose_name="Activated"),
        ),
        migrations.AddField(
            model_name="historicaltechnician",
            name="activated_at",
            field=model_utils.fields.MonitorField(
                blank=True,
                default=None,
                help_text="The time the Technician was activated at.",
                monitor="activated",
                null=True,
                verbose_name="Activated At",
                when={True},
            ),
        ),
        migrations.AddField(
            model_name="historicaltechnician",
            name="activation_email_last_sent_at",
            field=models.DateTimeField(
                blank=True, null=True, verbose_name="Activation Email Last Sent At"
            ),
        ),
        migrations.AddField(
            model_name="patient",
            name="beta",
            field=models.BooleanField(
                default=False,
                help_text="Designates that this user has permission to view test Interviews marked Beta = True.",
                verbose_name="Can see beta Interviews",
            ),
        ),
        migrations.AddField(
            model_name="patient",
            name="date_of_birth",
            field=fernet_fields.fields.EncryptedDateField(
                blank=True, null=True, verbose_name="Date of Birth"
            ),
        ),
        migrations.AddField(
            model_name="patient",
            name="first_name",
            field=fernet_fields.fields.EncryptedCharField(
                blank=True, max_length=150, verbose_name="First Name"
            ),
        ),
        migrations.AddField(
            model_name="patient",
            name="last_name",
            field=fernet_fields.fields.EncryptedCharField(
                blank=True, max_length=150, verbose_name="Last Name"
            ),
        ),
        migrations.AddField(
            model_name="patient",
            name="mrn",
            field=fernet_fields.fields.EncryptedCharField(
                blank=True,
                help_text="An MRN is constant for one patient to represent them from a clinical data perspective for their entire life for an individual hospital. However there may be more than one if hospital transfers are made. It is PID.3 in HL7 parlance, 'id' on Patient in FHIR. Unique together per clinic. Note this example: https://www.hl7.org/fhir/patient-example-a.json.html. We're going touse the value from 'identifier'.",
                max_length=255,
                verbose_name="Medical Record Number",
            ),
        ),
        migrations.AddField(
            model_name="technician",
            name="activated",
            field=models.BooleanField(default=False, verbose_name="Activated"),
        ),
        migrations.AddField(
            model_name="technician",
            name="activated_at",
            field=model_utils.fields.MonitorField(
                blank=True,
                default=None,
                help_text="The time the Technician was activated at.",
                monitor="activated",
                null=True,
                verbose_name="Activated At",
                when={True},
            ),
        ),
        migrations.AddField(
            model_name="technician",
            name="activation_email_last_sent_at",
            field=models.DateTimeField(
                blank=True, null=True, verbose_name="Activation Email Last Sent At"
            ),
        ),
        migrations.AlterField(
            model_name="historicalpatient",
            name="current_walkthrough_step_changed",
            field=model_utils.fields.MonitorField(
                blank=True,
                default=django.utils.timezone.now,
                editable=False,
                help_text="This field changes programatically when current_walkthrough_step is modified.",
                monitor="current_walkthrough_step_id",
                null=True,
                verbose_name="Current Walkthrough Step Last Changed At",
            ),
        ),
        migrations.AlterField(
            model_name="historicalpatient",
            name="guide",
            field=models.CharField(
                blank=True,
                choices=[("Jaz", "Jaz"), ("Jasper", "Jasper")],
                help_text="This is the currently preferred guide.",
                max_length=15,
                verbose_name="Guide",
            ),
        ),
        migrations.AlterField(
            model_name="historicalpatient",
            name="ssid",
            field=models.CharField(
                blank=True,
                db_index=True,
                default=None,
                help_text="This is the subject study id for patients. Set by Technicians upon patient creation/onboarding.",
                max_length=25,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message="SSIDs can only contain letters, numbers, hyphens, and underscores.",
                        regex="^[-a-zA-Z0-9_]+\\Z",
                    )
                ],
                verbose_name="SSID",
            ),
        ),
        migrations.AlterField(
            model_name="historicalpatient",
            name="user",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltechnician",
            name="clinic",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="clinics.Clinic",
                verbose_name="Clinic",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltechnician",
            name="user",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.AlterField(
            model_name="patient",
            name="current_walkthrough_step_changed",
            field=model_utils.fields.MonitorField(
                blank=True,
                default=django.utils.timezone.now,
                editable=False,
                help_text="This field changes programatically when current_walkthrough_step is modified.",
                monitor="current_walkthrough_step_id",
                null=True,
                verbose_name="Current Walkthrough Step Last Changed At",
            ),
        ),
        migrations.AlterField(
            model_name="patient",
            name="guide",
            field=models.CharField(
                blank=True,
                choices=[("Jaz", "Jaz"), ("Jasper", "Jasper")],
                help_text="This is the currently preferred guide.",
                max_length=15,
                verbose_name="Guide",
            ),
        ),
        migrations.AlterField(
            model_name="patient",
            name="ssid",
            field=models.CharField(
                blank=True,
                default=None,
                help_text="This is the subject study id for patients. Set by Technicians upon patient creation/onboarding.",
                max_length=25,
                null=True,
                unique=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message="SSIDs can only contain letters, numbers, hyphens, and underscores.",
                        regex="^[-a-zA-Z0-9_]+\\Z",
                    )
                ],
                verbose_name="SSID",
            ),
        ),
        migrations.AlterField(
            model_name="patient",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="patient",
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.AlterField(
            model_name="technician",
            name="clinic",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="clinics.Clinic",
                verbose_name="Clinic",
            ),
        ),
        migrations.AlterField(
            model_name="technician",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="technician",
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.CreateModel(
            name="HistoricalHelpline",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "status",
                    model_utils.fields.StatusField(
                        choices=[("choice1", "choice1"), ("choice2", "choice2")],
                        default="choice1",
                        max_length=100,
                        no_check_for_status=True,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        max_length=128, region=None
                    ),
                ),
                ("text", models.CharField(max_length=25)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Helpline",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalEncounter",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "status",
                    model_utils.fields.StatusField(
                        choices=[("choice1", "choice1"), ("choice2", "choice2")],
                        default="choice1",
                        max_length=100,
                        no_check_for_status=True,
                    ),
                ),
                (
                    "visit_number",
                    fernet_fields.fields.EncryptedCharField(
                        help_text="Maps to HL7 PV1-19, or 'identifier' on FHIR Encounter. Note also in coments: https://ushik.ahrq.gov/ViewItemDetails?&system=mdr&itemKey=77543000&enableAsynchronousLoading=true. Data Type is CX - http://hl7.eu/refactored/dtCX.html. If Mapping is incorrect suspect Episode of Care on Encounter as alternate field. Looks like there are at least some examples of a json field being needed to handle identifier. Not sure what to do with that. Perhaps it is 'id' on the Encounter instead?",
                        max_length=255,
                        verbose_name="Visit Number",
                    ),
                ),
                (
                    "date_of_service",
                    fernet_fields.fields.EncryptedDateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="Maps to Appointment.start in FHIR and ARQ-11.1, SCH-11.4 / TQ1-7in HL7.",
                        verbose_name="Date of Service",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="kiosk.Patient",
                        verbose_name="Patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Encounter",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Encounter",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "status",
                    model_utils.fields.StatusField(
                        choices=[("active", "Active"), ("archived", "Archived")],
                        default="active",
                        max_length=100,
                        no_check_for_status=True,
                    ),
                ),
                (
                    "visit_number",
                    fernet_fields.fields.EncryptedCharField(
                        help_text="Maps to HL7 PV1-19, or 'identifier' on FHIR Encounter. Note also in coments: https://ushik.ahrq.gov/ViewItemDetails?&system=mdr&itemKey=77543000&enableAsynchronousLoading=true. Data Type is CX - http://hl7.eu/refactored/dtCX.html. If Mapping is incorrect suspect Episode of Care on Encounter as alternate field. Looks like there are at least some examples of a json field being needed to handle identifier. Not sure what to do with that. Perhaps it is 'id' on the Encounter instead?",
                        max_length=255,
                        verbose_name="Visit Number",
                    ),
                ),
                (
                    "date_of_service",
                    fernet_fields.fields.EncryptedDateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="Maps to Appointment.start in FHIR and ARQ-11.1, SCH-11.4 / TQ1-7in HL7.",
                        verbose_name="Date of Service",
                    ),
                ),
                (
                    "patient",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="kiosk.Patient",
                        verbose_name="Patient",
                    ),
                ),
            ],
            options={"verbose_name": "Encounter", "verbose_name_plural": "Encounters",},
        ),
    ]
