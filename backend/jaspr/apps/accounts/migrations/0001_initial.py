# Generated by Django 2.2.13 on 2020-06-19 21:32

import django.db.models.deletion
import django.utils.timezone
import fernet_fields.fields
import jaspr.apps.common.fields.encrypted_phone_number_field
import model_utils.fields
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0011_update_proxy_permissions"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=255, unique=True, verbose_name="Email Address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="Is Staff?",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="Is Active?",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Date Joined"
                    ),
                ),
                (
                    "password_changed",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        null=True,
                        verbose_name="Password Last Changed At",
                    ),
                ),
                (
                    "account_locked_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Account Locked At"
                    ),
                ),
                (
                    "password_complex",
                    models.BooleanField(
                        default=False, verbose_name="Password Complex?"
                    ),
                ),
                (
                    "mobile_phone",
                    jaspr.apps.common.fields.encrypted_phone_number_field.EncryptedPhoneNumberField(
                        blank=True,
                        max_length=128,
                        region=None,
                        verbose_name="Mobile Phone",
                    ),
                ),
                (
                    "preferred_message_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("email", "Email"),
                            ("sms", "Text Message"),
                            ("email and sms", "Email and Text Message"),
                        ],
                        default="email",
                        max_length=35,
                        verbose_name="Preferred Message Type",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={"verbose_name": "User", "verbose_name_plural": "Users",},
        ),
        migrations.CreateModel(
            name="SecurityQuestion",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "status",
                    model_utils.fields.StatusField(
                        choices=[("active", "active"), ("archive", "archive")],
                        default="active",
                        max_length=100,
                        no_check_for_status=True,
                    ),
                ),
                (
                    "encrypted_question",
                    fernet_fields.fields.EncryptedCharField(
                        default=" ", max_length=255, verbose_name="Security Question"
                    ),
                ),
                (
                    "encrypted_answer",
                    fernet_fields.fields.EncryptedCharField(
                        default=" ", max_length=255, verbose_name="Security Answer"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Security Question",
                "verbose_name_plural": "Security Questions",
            },
        ),
        migrations.CreateModel(
            name="LogUserLoginAttempts",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(null=True)),
                ("was_successful", models.BooleanField()),
                ("locked_out", models.BooleanField(default=False)),
                ("date_time", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"verbose_name": "User Log", "verbose_name_plural": "User Logs",},
        ),
        migrations.CreateModel(
            name="LoggedOutAuthToken",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("digest", models.CharField(max_length=128, verbose_name="Digest")),
                ("token_key", models.CharField(max_length=8, verbose_name="Token Key")),
                ("salt", models.CharField(max_length=16, verbose_name="Salt")),
                ("logged_out_at", models.DateTimeField(verbose_name="Logged Out At")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Logged Out Expiring Token",
                "verbose_name_plural": "Logged Out Expiring Tokens",
            },
        ),
        migrations.CreateModel(
            name="HistoricalSecurityQuestion",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "status",
                    model_utils.fields.StatusField(
                        choices=[("choice1", "choice1"), ("choice2", "choice2")],
                        default="choice1",
                        max_length=100,
                        no_check_for_status=True,
                    ),
                ),
                (
                    "encrypted_question",
                    fernet_fields.fields.EncryptedCharField(
                        default=" ", max_length=255, verbose_name="Security Question"
                    ),
                ),
                (
                    "encrypted_answer",
                    fernet_fields.fields.EncryptedCharField(
                        default=" ", max_length=255, verbose_name="Security Answer"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Security Question",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
